//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
namespace treeTaggerMVC3.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class treeTaggerMVC3Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new treeTaggerMVC3Entities object using the connection string found in the 'treeTaggerMVC3Entities' section of the application configuration file.
        /// </summary>
        public treeTaggerMVC3Entities() : base("name=treeTaggerMVC3Entities", "treeTaggerMVC3Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new treeTaggerMVC3Entities object.
        /// </summary>
        public treeTaggerMVC3Entities(string connectionString) : base(connectionString, "treeTaggerMVC3Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new treeTaggerMVC3Entities object.
        /// </summary>
        public treeTaggerMVC3Entities(EntityConnection connection) : base(connection, "treeTaggerMVC3Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<treeObservation> treeObservations
        {
            get
            {
                if ((_treeObservations == null))
                {
                    _treeObservations = base.CreateObjectSet<treeObservation>("treeObservations");
                }
                return _treeObservations;
            }
        }
        private ObjectSet<treeObservation> _treeObservations;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the treeObservations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotreeObservations(treeObservation treeObservation)
        {
            base.AddObject("treeObservations", treeObservation);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="treeTaggerMVC3Model", Name="treeObservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class treeObservation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new treeObservation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lat">Initial value of the lat property.</param>
        /// <param name="longitude">Initial value of the longitude property.</param>
        /// <param name="radius">Initial value of the radius property.</param>
        /// <param name="date">Initial value of the date property.</param>
        public static treeObservation CreatetreeObservation(global::System.Int32 id, global::System.Single lat, global::System.Single longitude, global::System.Single radius, global::System.DateTime date)
        {
            treeObservation treeObservation = new treeObservation();
            treeObservation.Id = id;
            treeObservation.lat = lat;
            treeObservation.longitude = longitude;
            treeObservation.radius = radius;
            treeObservation.date = date;
            return treeObservation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String species
        {
            get
            {
                return _species;
            }
            set
            {
                OnspeciesChanging(value);
                ReportPropertyChanging("species");
                _species = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("species");
                OnspeciesChanged();
            }
        }
        private global::System.String _species;
        partial void OnspeciesChanging(global::System.String value);
        partial void OnspeciesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single lat
        {
            get
            {
                return _lat;
            }
            set
            {
                OnlatChanging(value);
                ReportPropertyChanging("lat");
                _lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lat");
                OnlatChanged();
            }
        }
        private global::System.Single _lat;
        partial void OnlatChanging(global::System.Single value);
        partial void OnlatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single longitude
        {
            get
            {
                return _longitude;
            }
            set
            {
                OnlongitudeChanging(value);
                ReportPropertyChanging("longitude");
                _longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("longitude");
                OnlongitudeChanged();
            }
        }
        private global::System.Single _longitude;
        partial void OnlongitudeChanging(global::System.Single value);
        partial void OnlongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single radius
        {
            get
            {
                return _radius;
            }
            set
            {
                OnradiusChanging(value);
                ReportPropertyChanging("radius");
                _radius = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("radius");
                OnradiusChanged();
            }
        }
        private global::System.Single _radius;
        partial void OnradiusChanging(global::System.Single value);
        partial void OnradiusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();

        #endregion

    
    }

    #endregion

    
}
